{"version":3,"sources":["history.js","views/index.js","views/app.js","index.js"],"names":["createBrowserHistory","StreamShow","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buildPlayer","stream","player","flv","createPlayer","type","url","attachMediaElement","videoRef","current","load","createRef","inherits","createClass","key","value","react_default","a","createElement","ref","className","controls","Component","defaultProps","App","react","Router","history","Switch","Route","exact","path","render","views","app","document","getElementById"],"mappings":"gMAEeA,2DCCTC,EAAU,SAAAC,GACd,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAQRQ,YAAc,WAAM,IACVC,EAAWR,EAAKD,MAAhBS,QACJR,EAAKS,QAAWD,IACpBR,EAAKS,OAASC,IAAIC,aAAa,CAC7BC,KAAM,MACNC,IAAG,qCAELb,EAAKS,OAAOK,mBAAmBd,EAAKe,SAASC,SAC7ChB,EAAKS,OAAOQ,SAfZjB,EAAKe,SAAWG,sBAFClB,EADL,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAAC,GAAAG,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAA,EAAAwB,IAAA,oBAAAC,MAAA,WAOZnB,KAAKI,gBAPO,CAAAc,IAAA,SAAAC,MAAA,WAuBZ,OADmBnB,KAAKJ,MAAhBS,OAGNe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEC,IAAMvB,KAAKY,SACXY,UAAU,yCACVC,UAAQ,MAPI,SAvBR/B,EAAA,CAAiBgC,aAsCjChC,EAAWiC,aAAe,CACxBtB,OAAQ,cAGKX,QCfAkC,MAzBf,WAEI,OAEIR,EAAAC,EAAAC,cAACO,EAAA,SAAD,KAEIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,QAAUA,GAEdX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KAEIZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IACdC,OAAQ,SAACxC,GACT,OAAQwB,EAAAC,EAAAC,cAACe,EAAezC,UCbhDwC,iBAAOhB,EAAAC,EAAAC,cAACgB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.18e3bde5.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { createRef, Component } from 'react';\r\nimport flv from 'flv.js';\r\n\r\nconst StreamShow = class extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.videoRef = createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buildPlayer();\r\n  }\r\n\r\n  buildPlayer = () => {\r\n    const { stream } = this.props;\r\n    if (this.player || !stream) return;\r\n    this.player = flv.createPlayer({\r\n      type: 'flv',\r\n      url: `http://localhost:8000/live/1.flv`,\r\n    });\r\n    this.player.attachMediaElement(this.videoRef.current);\r\n    this.player.load();\r\n  }\r\n  \r\n  render() {\r\n    const { stream } = this.props;\r\n    if (!stream) return null;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <video \r\n            ref={ this.videoRef } \r\n            className=\"video-container radius bordered shadow\"\r\n            controls\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nStreamShow.defaultProps = {\r\n  stream: () => {},\r\n};\r\n\r\nexport default StreamShow;\r\n","import React, { Fragment } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport history from '../history';\r\nimport StreamShow from './';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n\r\n            <Router history={ history }>\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/\"\r\n                        render={(props) => {\r\n                        return (<StreamShow {...props}/>);\r\n                    }}/>\r\n\r\n                </Switch>\r\n\r\n            </Router>\r\n\r\n        </Fragment>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './views/app';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}